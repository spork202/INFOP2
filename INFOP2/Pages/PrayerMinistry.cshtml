@page
@model INFOP2.Pages.PrayerMinistry
@{
    ViewData["Title"] = "Prayer Ministry";
    Layout = "_Layout";
}

<div class="container-fluid px-4 py-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <div>
                    <h2 class="fw-bold mb-1">@ViewData["Title"]</h2>
                    <p class="text-muted mb-0">Manage your prayer events</p>
                </div>
                <div class="text-end">
                    <h4 class="h6 mb-1">Welcome back,</h4>
                    <p class="text-primary mb-0 fw-bold">@User.Identity?.Name</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Success Card -->
    <div id="success-card" class="card border-0 shadow-sm mb-4 d-none">
        <div class="card-body d-flex justify-content-between align-items-center p-3">
            <div>
                <h5 class="card-title text-success mb-1">Success!</h5>
                <p class="card-text mb-0" id="success-message">Action completed successfully!</p>
            </div>
            <button type="button" class="btn-close" aria-label="Close" onclick="$('#success-card').addClass('d-none');"></button>
        </div>
    </div>

    <!-- Add Event Button -->
    <div class="d-flex justify-content-end mb-4 gap-2">
        <button class="btn btn-success d-flex align-items-center" data-bs-toggle="modal" data-bs-target="#addEventModal">
            <i class="fa-solid fa-plus me-2"></i> Add Prayer Event
        </button>
        <button class="btn btn-outline-secondary d-flex align-items-center" id="exportBtnMinistry" data-bs-tooltip="tooltip" title="Export to Excel">
            <i class="fa-solid fa-download me-2"></i> Export
        </button>
    </div>

    <!-- Prayer Event Cards -->
    <div id="events-container" class="col-md-12">
        <!-- Dynamically populated by JavaScript -->
    </div>
</div>

<!-- Add Event Modal -->
<div class="modal fade" id="addEventModal" tabindex="-1" aria-labelledby="addEventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-success text-white rounded-top">
                <h5 class="modal-title" id="addEventModalLabel">Add Prayer Event</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="add-event-form">
                <div class="modal-body p-4">
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Title</label>
                        <input type="text" class="form-control" id="add-event-title" placeholder="Enter prayer title" required />
                        <span class="text-danger small" id="add-event-title-error"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Date</label>
                        <input type="date" class="form-control" id="add-event-date" required />
                        <span class="text-danger small" id="add-event-date-error"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Notes</label>
                        <input type="text" class="form-control" id="add-event-notes" placeholder="Enter prayer notes" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Remarks</label>
                        <textarea class="form-control" id="add-event-remarks" rows="3" placeholder="Enter remarks"></textarea>
                    </div>
                </div>
                <div class="modal-footer bg-light rounded-bottom">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Save Event</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Event Modal -->
<div class="modal fade" id="editEventModal" tabindex="-1" aria-labelledby="editEventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white rounded-top">
                <h5 class="modal-title" id="editEventModalLabel">Edit Prayer Event</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="edit-event-form">
                <div class="modal-body p-4">
                    <input type="hidden" id="edit-event-id" />
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Title</label>
                        <input type="text" class="form-control" id="edit-event-title" required />
                        <span class="text-danger small" id="edit-event-title-error"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Date</label>
                        <input type="date" class="form-control" id="edit-event-date" required />
                        <span class="text-danger small" id="edit-event-date-error"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Notes</label>
                        <input type="text" class="form-control" id="edit-event-notes" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Remarks</label>
                        <textarea class="form-control" id="edit-event-remarks" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer bg-light rounded-bottom">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Event Modal -->
<div class="modal fade" id="deleteEventModal" tabindex="-1" aria-labelledby="deleteEventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white rounded-top">
                <h5 class="modal-title" id="deleteEventModalLabel">Delete Prayer Event</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4 text-center">
                <i class="fa-solid fa-triangle-exclamation text-danger fa-3x mb-3"></i>
                <p class="mb-0">Are you sure you want to delete this prayer event?</p>
                <p class="text-muted small">This action cannot be undone.</p>
                <input type="hidden" id="delete-event-id" />
            </div>
            <div class="modal-footer bg-light rounded-bottom">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirm-delete">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore-compat.js"></script>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Font Awesome (for icons) -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
    <!-- Firebase Config and JavaScript Logic -->
    <script>
        // Pass FirebaseConfigJson to JavaScript
        const firebaseConfig = @Html.Raw(Model.FirebaseConfigJson);

        // Initialize Firebase
        let db = null;
        try {
            if (!firebaseConfig || Object.keys(firebaseConfig).length === 0) {
                throw new Error("Firebase configuration is empty or invalid");
            }
            const app = firebase.initializeApp(firebaseConfig);
            db = firebase.firestore();
            console.log("Firebase initialized successfully");
        } catch (error) {
            console.error("Firebase initialization error:", error);
        }

        // Global array to store prayer events
        let events = [];

        // Load data on page load
        window.onload = function () {
            loadEvents();
        };

        // Load Prayer Events from Firestore
        function loadEvents() {
            db.collection('prayer_events').get().then(snapshot => {
                events = [];
                snapshot.forEach(doc => {
                    const data = doc.data();
                    events.push({
                        Id: doc.id,
                        Title: data.Title,
                        Date: data.Date || '',
                        Notes: data.Notes || '',
                        Remarks: data.Remarks || '',
                        userId: data.userId || null
                    });
                });
                renderEvents();
                if (events.length === 0) {
                    document.getElementById('events-container').innerHTML = '<p class="text-muted text-center">No prayer events found. Create one to start.</p>';
                }
            }).catch(error => {
                console.error("Error loading events:", error);
                document.getElementById('events-container').innerHTML = '<p class="text-danger text-center">Failed to load events. Please try again.</p>';
            });
        }

        // Render Prayer Events
        function renderEvents() {
            const container = document.getElementById('events-container');
            if (!container) {
                console.error("Element with ID 'events-container' not found");
                return;
            }
            container.innerHTML = '';
            events.forEach(event => {
                const card = `
                    <div class="card border-0 shadow-sm rounded-4 mb-4" data-id="${event.Id}">
                        <div class="card-header bg-light d-flex justify-content-between align-items-center bd-unset">
                            <div>
                                <h5 class="mb-1">${event.Title}</h5>
                                <p class="text-muted mb-0">Date: ${event.Date || 'N/A'}</p>
                            </div>
                            <div>
                                <button class="btn btn-sm btn-warning" data-bs-tooltip="tooltip" title="Edit" onclick="openEditEvent('${event.Id}')">
                                    <i class="fa-solid fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-danger" data-bs-tooltip="tooltip" title="Delete" onclick="openDeleteEvent('${event.Id}')">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <h6 class="fw-semibold mb-2">Notes</h6>
                                    <p class="mb-0">${event.Notes || 'N/A'}</p>
                                </div>
                                <div class="col-md-6">
                                    <h6 class="fw-semibold mb-2">Remarks</h6>
                                    <p class="mb-0">${event.Remarks || 'N/A'}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                container.innerHTML += card;
            });
        }

        // Add Prayer Event
        document.getElementById('add-event-form').addEventListener('submit', function (e) {
            e.preventDefault();
            const title = document.getElementById('add-event-title').value.trim();
            const date = document.getElementById('add-event-date').value;
            const notes = document.getElementById('add-event-notes').value.trim();
            const remarks = document.getElementById('add-event-remarks').value.trim();

            // Reset errors
            document.getElementById('add-event-title-error').innerText = '';
            document.getElementById('add-event-date-error').innerText = '';

            if (!title) {
                document.getElementById('add-event-title-error').innerText = 'Title is required';
                return;
            }
            if (!date) {
                document.getElementById('add-event-date-error').innerText = 'Date is required';
                return;
            }

            const event = {
                Title: title,
                Date: date,
                Notes: notes,
                Remarks: remarks,
                userId: null // Placeholder for no authentication
            };

            db.collection('prayer_events').add(event).then(() => {
                $('#addEventModal').modal('hide');
                document.getElementById('add-event-form').reset();
                loadEvents();
                showSuccess("Prayer event added successfully!");
            }).catch(error => {
                console.error("Error adding event:", error);
                showError("Failed to add event. Please try again.");
            });
        });

        // Open Edit Event Modal
        function openEditEvent(id) {
            const event = events.find(e => e.Id === id);
            if (event) {
                document.getElementById('edit-event-id').value = event.Id;
                document.getElementById('edit-event-title').value = event.Title;
                document.getElementById('edit-event-date').value = event.Date;
                document.getElementById('edit-event-notes').value = event.Notes;
                document.getElementById('edit-event-remarks').value = event.Remarks;
                $('#editEventModal').modal('show');
            }
        }

        // Edit Prayer Event
        document.getElementById('edit-event-form').addEventListener('submit', function (e) {
            e.preventDefault();
            const id = document.getElementById('edit-event-id').value;
            const title = document.getElementById('edit-event-title').value.trim();
            const date = document.getElementById('edit-event-date').value;
            const notes = document.getElementById('edit-event-notes').value.trim();
            const remarks = document.getElementById('edit-event-remarks').value.trim();

            // Reset errors
            document.getElementById('edit-event-title-error').innerText = '';
            document.getElementById('edit-event-date-error').innerText = '';

            if (!title) {
                document.getElementById('edit-event-title-error').innerText = 'Title is required';
                return;
            }
            if (!date) {
                document.getElementById('edit-event-date-error').innerText = 'Date is required';
                return;
            }

            const event = {
                Title: title,
                Date: date,
                Notes: notes,
                Remarks: remarks,
                userId: null // Placeholder for no authentication
            };

            db.collection('prayer_events').doc(id).update(event).then(() => {
                $('#editEventModal').modal('hide');
                loadEvents();
                showSuccess("Prayer event updated successfully!");
            }).catch(error => {
                console.error("Error updating event:", error);
                showError("Failed to update event. Please try again.");
            });
        });

        // Open Delete Event Modal
        function openDeleteEvent(id) {
            document.getElementById('delete-event-id').value = id;
            $('#deleteEventModal').modal('show');
        }

        // Delete Prayer Event
        document.getElementById('confirm-delete').addEventListener('click', function () {
            const id = document.getElementById('delete-event-id').value;
            db.collection('prayer_events').doc(id).delete().then(() => {
                $('#deleteEventModal').modal('hide');
                loadEvents();
                showSuccess("Prayer event deleted successfully!");
            }).catch(error => {
                console.error("Error deleting event:", error);
                showError("Failed to delete event. Please try again.");
            });
        });

        // Show Success Message
        function showSuccess(message) {
            const successCard = document.getElementById('success-card');
            const successMessage = document.getElementById('success-message');
            if (successCard && successMessage) {
                successMessage.innerText = message;
                successCard.classList.remove('d-none');
                setTimeout(() => successCard.classList.add('d-none'), 5000);
            } else {
                console.error("Success card or message element not found");
            }
        }

        // Show Error Message
        function showError(message) {
            const container = document.getElementById('events-container');
            if (container) {
                container.innerHTML = `<p class="text-danger text-center">${message}</p>`;
            } else {
                console.error("Events container not found");
            }
        }
    </script>
}